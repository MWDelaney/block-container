{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/index.js","webpack:///external {\"this\":[\"wp\",\"blockEditor\"]}","webpack:///external {\"this\":[\"wp\",\"blocks\"]}","webpack:///external {\"this\":[\"wp\",\"components\"]}","webpack:///external {\"this\":[\"wp\",\"element\"]}","webpack:///external {\"this\":[\"wp\",\"i18n\"]}"],"names":["registerBlockType","title","__","description","category","icon","supports","html","align","attributes","type","default","backgroundWidth","color","backgroundColor","edit","className","setAttributes","style","wrapperStyles","containerStyles","value","save"],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","/**\n * Registers a new block provided a unique name and an object defining its behavior.\n *\n * @see https://developer.wordpress.org/block-editor/developers/block-api/#registering-a-block\n */\nimport { registerBlockType } from '@wordpress/blocks';\nimport {\n  InnerBlocks,\n  ColorPalette,\n  InspectorControls,\n} from '@wordpress/block-editor';\n\nimport {\n  PanelBody,\n  ToggleControl,\n} from '@wordpress/components';\n\n/**\n * Retrieves the translation of text.\n *\n * @see https://developer.wordpress.org/block-editor/packages/packages-i18n/\n */\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Every block starts by registering a new block type definition.\n *\n * @see https://developer.wordpress.org/block-editor/developers/block-api/#registering-a-block\n */\nregisterBlockType( 'create-block/container', {\n\t/**\n\t * This is the display title for your block, which can be translated with `i18n` functions.\n\t * The block inserter will show this name.\n\t */\n\ttitle: __( 'Container', 'create-block' ),\n\n\t/**\n\t * This is a short description for your block, can be translated with `i18n` functions.\n\t * It will be shown in the Block Tab in the Settings Sidebar.\n\t */\n\tdescription: __(\n\t\t'',\n\t\t'create-block'\n\t),\n\n\t/**\n\t * Blocks are grouped into categories to help users browse and discover them.\n\t * The categories provided by core are `common`, `embed`, `formatting`, `layout` and `widgets`.\n\t */\n\tcategory: 'widgets',\n\n\t/**\n\t * An icon property should be specified to make it easier to identify a block.\n\t * These can be any of WordPressâ€™ Dashicons, or a custom svg element.\n\t */\n\ticon: 'editor-contract',\n\n\t/**\n\t * Optional block extended support features.\n\t */\n\tsupports: {\n\t\t// Removes support for an HTML mode.\n    html: false,\n    align: [\"full\"],\n  },\n\n  attributes: {\n    align: {\n      type: 'string',\n      default: 'full',\n    },\n    backgroundWidth: {\n      type: 'string',\n      default: 'full',\n    },\n    color: {\n      type: 'string',\n    },\n    backgroundColor: {\n      type: 'string',\n      default: 'transparent',\n    }\n  },\n\n\t/**\n\t * The edit function describes the structure of your block in the context of the editor.\n\t * This represents what the editor will render when the block is used.\n\t *\n\t * @see https://developer.wordpress.org/block-editor/developers/block-api/block-edit-save/#edit\n\t *\n\t * @param {Object} [props] Properties passed from the editor.\n\t *\n\t * @return {WPElement} Element to render.\n\t */\n\tedit( { className, attributes, setAttributes } ) {\n    const { color, backgroundColor, backgroundWidth } = attributes;\n    const style = {\n      color: color,\n      backgroundColor: backgroundColor,\n     };\n\n     const wrapperStyles = backgroundWidth ? style : [];\n     const containerStyles = backgroundWidth ? [] : style;\n\n\t\treturn (\n\t\t\t<div className={ className } style={ wrapperStyles }>\n      <InspectorControls>\n\t\t\t\t\t<PanelBody title={ __( 'Color settings' ) } isnitialOpen={true}>\n          <ToggleControl\n              label=\"Background Full Width?\"\n              help={\n                backgroundWidth\n                  ? \"Background color will be full-width.\"\n                  : \"Background color will be contained.\"\n              }\n              checked={backgroundWidth}\n              onChange={value => {\n                setAttributes({ backgroundWidth: value });\n              }}\n            />\n          <label className=\"blocks-base-control__label\">Text Color</label>\n            <ColorPalette\n              value={ color }\n              onChange={ value => {\n                setAttributes({color: value})\n              }}\n            />\n            <label className=\"blocks-base-control__label\">Background Color</label>\n            <ColorPalette\n              value={ backgroundColor }\n              onChange={ value => {\n                setAttributes({backgroundColor: value})\n              }}\n            />\n          </PanelBody>\n        </InspectorControls>\n        <div className=\"container\" style={ containerStyles }>\n          <InnerBlocks />\n        </div>\n\t\t\t</div>\n\t\t);\n\t},\n\n\t/**\n\t * The save function defines the way in which the different attributes should be combined\n\t * into the final markup, which is then serialized by the block editor into `post_content`.\n\t *\n\t * @see https://developer.wordpress.org/block-editor/developers/block-api/block-edit-save/#save\n\t *\n\t * @return {WPElement} Element to render.\n\t */\n\tsave({ className }) {\n\t\treturn (\n      <div className={ className }>\n        <div className=\"container\">\n          <InnerBlocks.Content />\n        </div>\n      </div>\n\t\t);\n\t},\n} );\n","(function() { module.exports = this[\"wp\"][\"blockEditor\"]; }());","(function() { module.exports = this[\"wp\"][\"blocks\"]; }());","(function() { module.exports = this[\"wp\"][\"components\"]; }());","(function() { module.exports = this[\"wp\"][\"element\"]; }());","(function() { module.exports = this[\"wp\"][\"i18n\"]; }());"],"sourceRoot":""}